<script src="js/ace-builds/ace.js"></script>
<script src="js/ace-builds/mode-sql.js"></script>
<script src="js/ace-builds/theme-ambiance.js"></script>
<script src="js/scuttle.js"></script>

<ul class="nav nav-tabs" role="tablist">
  <li class="active">
    <a href="#editor" role="tab" data-toggle="tab">Editor</a>
  </li>
  <li>
    <a href="#associations" role="tab" data-toggle="tab">Associations</a>
  </li>
</ul>

<div class="tab-content hat">
  <div class="tab-pane active" id="editor">
    <div class="jumbotron">
      <div class="editor"></div>
      <div class="button-bar">
        <div class="btn btn-default elbow-room btn-beautify" title="Make me Beautiful">
          <i class="glyphicon glyphicon-eye-open"></i>
        </div>
        <span class="conversion-error-message error-message">
          <i class="glyphicon glyphicon-warning-sign"></i>
          <span>An error occurred.</span>
        </span>
        <div class="pull-right">
          <form class="form-inline" role="form">
            <div class="form-group elbow-room">
              <label for="sel-rails-version">Rails Version</label>
              &nbsp;
              <select class="form-control" id="sel-rails-version">
                <option value="5.2.1">&lt; 6.0.0</option>
                <option value="6.0.0" selected>&gt;= 6.0.0</option>
              </select>
            </div>
            <div class="checkbox elbow-room">
              <label>
                <input type="checkbox" id="chk-use-arel-helpers"> Use ArelHelpers
              </label>
            </div>
            <div class="checkbox">
              <label>
                <input type="checkbox" id='chk-simplify-arel-nodes'> Simplify Arel Nodes
              </label>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <div class="tab-pane" id="associations">
    <div class="jumbotron">
      <h4>Configure Associations</h4>
      <p>Scuttle can more accurately identify joins in your SQL statements if it knows about the associations between your application's models.</p>
      <hr style="margin: 0" />
      <h5><strong>Import Models From Github (read-only, don't worry)</strong></h5>
      <p>Exports an archive from Github and automatically extracts and imports associations from <code>app/models</code>. <br/>Depending on the size of the repo, this process could take a while.</p>
      <% if authenticated? %>
        <form class="form-github form-inline cushion-large" role="form">
          <input type="text" class="github-repo form-control" placeholder="username/project" />
          <button class="btn btn-default btn-github-import elbow-room">Import</button>
          <img class="import-spinner" src="images/spinner.gif" />
          <span class="import-error-message error-message">
            <i class="glyphicon glyphicon-warning-sign"></i>
            <span>An error occurred.</span>
          </span>
          <span class="import-success-message success-message">
            <i class="glyphicon glyphicon-ok"></i>
            <span>Import succeeded!</span>
          </span>
        </form>
      <% else %>
        <p>Please <a href="/login">login</a> in with your github account.</p>
      <% end %>
      <hr style="margin: 0" />
      <h5>Configure Associations (<a class="btn-clear-all">Clear All</a>)</h5>
      <div class="btn-expand-collapse">
        <i class="glyphicon glyphicon-chevron-down elbow-room"></i><span>Collapse</span>
      </div>
      <div class="top-hat">
        <form class="form-associations" role="form">
          <%= erb :'shared/association_form' %>
        </form>
        <button class="btn btn-default btn-add-association hat">Add Association</button>
      </div>
    </div>
  </div>
</div>

<div class="arel">
</div>

<div class="row info">
  <div class="col-lg-6">
    <h4>Join Tables</h4>
    <p>Scuttle doesn't know anything about your Rails models, so it can't correctly identify join tables (i.e. tables that have no corresponding Ruby class). You'll need to replace these by hand. Usually this can be resolved by creating an <code>Arel::Table</code> object and referencing its columns. For example, create a table: <code>pc = Arel::Table.new("posts_comments")</code>, then use it like so: <code>pc[:post_id]</code>.</p>

    <h4>Qualified Columns</h4>
    <p>Scuttle doesn't always know which table a referenced column belongs to. This isn't usually a problem, except when that column is the left-hand side of an expression. If you see something like <code>where(:id.eq(1))</code> in the conversion result, chances are you didn't fully qualify the column with a table. Try <code>WHERE post.id = 1</code> instead of <code>WHERE id = 1</code>.</p>

    <h4>Why Does Scuttle Exist?</h4>
    <p>I gave a <a href="https://www.youtube.com/watch?v=ShPAxNcLm3o">talk</a> at RailsConf in 2014 about constructing advanced queries with Arel. This project is a direct result of working on the talk. Plus it was fun :)</p>
  </div>

  <div class="col-lg-6">
    <h4>Double Quotes</h4>
    <p>The SQL parser Scuttle uses does not allow double quotes around column or table names, and it even prefers literal strings to be wrapped in single quotes. This could pose a problem if you're trying to convert a PostgresSQL query, since all column and table names use double quotes.</p>

    <h4>Why Can't Scuttle Interpret my Query?</h4>
    <p>It's pretty difficult to anticipate every kind of query, but Scuttle should be able to handle nearly all of the queries you might find in a Rails log. Currently, Scuttle only supports SELECT queries, but more types are coming soon. If you'd like to request a feature or submit a bug report, let me know on <a href="https://github.com/camertron/scuttle-rb">Github</a>.</p>

    <h4>Why is the Project Called Scuttle?</h4>
    <p>Initially I wanted to call it "Ariel" (i.e. from The Little Mermaid), but that's too linguistically similar to "Arel". Instead I chose to name it after the seagull in that movie, one of Ariel's best friends.</p>
  </div>
</div>
